class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        # 1. find the target value using binary search
        # 2. if not found, return [-1,-1]
        # 3. if found, return the starting and ending position of target
        
        l, r = 0, len(nums) - 1
        while l <= r:
            mid = (l + r) // 2
			# If the mid number matches target, search neighbors until mismatch
            if nums[mid] == target:
                start, end = mid, mid
                while start > 0 and nums[start-1] == target:
                    start -= 1
                while end < len(nums) - 1 and nums[end+1] == target:
                    end += 1
                return [start, end]
            elif nums[mid] < target:
                l = mid + 1
            else:
                r = mid - 1
        return [-1, -1]
